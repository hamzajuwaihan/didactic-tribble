{"ast":null,"code":"import { ADD_BLOG, DELETE_BLOG } from \"./blogTypes\";\nconst initialState = {\n  blogs: []\n};\nconst blogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_BLOG:\n      return {\n        ...state,\n        blogs: [...state.blogs, action.payload]\n      };\n    case DELETE_BLOG:\n      return {\n        ...state,\n        blogs: state.blogs.filter(blog => blog.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\nexport default blogReducer;","map":{"version":3,"names":["ADD_BLOG","DELETE_BLOG","initialState","blogs","blogReducer","state","action","type","payload","filter","blog","id"],"sources":["C:/Users/user/Downloads/blog-redux/blog-redux/src/redux/blogs/blogReducer.js"],"sourcesContent":["import { ADD_BLOG, DELETE_BLOG } from \"./blogTypes\";\n\nconst initialState = {\n    blogs: []\n}\n\nconst blogReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_BLOG: return {\n            ...state,\n            blogs: [...state.blogs, action.payload]\n        }\n        case DELETE_BLOG: return {\n            ...state,\n            blogs: state.blogs.filter((blog)=> blog.id !== action.payload)\n        }\n        default: return state\n    }\n}\n\nexport default blogReducer;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,aAAa;AAEnD,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EAC7C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKP,QAAQ;MAAE,OAAO;QAClB,GAAGK,KAAK;QACRF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAEG,MAAM,CAACE,OAAO;MAC1C,CAAC;IACD,KAAKP,WAAW;MAAE,OAAO;QACrB,GAAGI,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MACjE,CAAC;IACD;MAAS,OAAOH,KAAK;EAAA;AAE7B,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}